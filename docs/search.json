[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Calvin Gao, Terry Yuan Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/qacPlot.html","id":"example-dataset","dir":"Articles","previous_headings":"","what":"Example Dataset","title":"Plotting with thePlot","text":"Let’s use favorite one mtcars example.","code":"data(mtcars)"},{"path":"/articles/qacPlot.html","id":"data-management","dir":"Articles","previous_headings":"Example Dataset","what":"Data Management","title":"Plotting with thePlot","text":"Since thePlot rely type variables (categorical quantitative) selecting plots, need manage variables using thePlot using function. Typically, pay attention numeric variables supposed categorical dataset. example, cyl variable mtcars categorical variable, class numeric. can copy following codes manage variables mtcars:","code":"mtcars$cyl <- as.factor(mtcars$cyl) mtcars$vs <- as.factor(mtcars$vs) mtcars$am <- as.factor(mtcars$am) mtcars$gear <- as.factor(mtcars$gear)"},{"path":"/articles/qacPlot.html","id":"lets-plot","dir":"Articles","previous_headings":"","what":"Let’s Plot!","title":"Plotting with thePlot","text":"Now can start plotting thePlot. Let’s take look univariate, bivariate, multivariate graphs one one.","code":""},{"path":"/articles/qacPlot.html","id":"univariate","dir":"Articles","previous_headings":"Let’s Plot!","what":"Univariate","title":"Plotting with thePlot","text":"want visualize one variable, need specify data frame variable. thePlot(mydata, Variable1)","code":"thePlot(mtcars, am) thePlot(mtcars, mpg)"},{"path":"/articles/qacPlot.html","id":"bivariate","dir":"Articles","previous_headings":"Let’s Plot!","what":"Bivariate","title":"Plotting with thePlot","text":"interested relationship two variables, can follow syntax: thePlot(mydata, ExplanatoryVariable, ResponseVariable)","code":"thePlot(mtcars, cyl, mpg)"},{"path":"/articles/qacPlot.html","id":"multivariate","dir":"Articles","previous_headings":"Let’s Plot!","what":"Multivariate","title":"Plotting with thePlot","text":"thePlot can handle 3 variables. can visualize relationship explanatory variable response variable grouped third variable. Notes: third variable must categorical variable. thePlot(mydata, ExplanatoryVariable, ResponseVariable, )","code":"thePlot(mtcars, am, mpg, vs)"},{"path":"/articles/qacPlot.html","id":"list-of-cases","dir":"Articles","previous_headings":"","what":"List of cases","title":"Plotting with thePlot","text":"10 scenarios total. can find corresponding plot type scenario following table.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Calvin Gao. Author, maintainer. Terry Yuan. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gao C, Yuan T (2022). qacPlot: Takes variables, determines class , create simple plot. R package version 0.0.0.9000.","code":"@Manual{,   title = {qacPlot: Takes in variables, determines what class they are, and create a simple plot},   author = {Calvin Gao and Terry Yuan},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"qacplot","dir":"","previous_headings":"","what":"Takes in variables, determines what class they are, and create a simple plot","title":"Takes in variables, determines what class they are, and create a simple plot","text":"Using R, can plot various plots visualize data interested . However, dozens types plots hard memorize decide plot type use. goal qacPlot help quickly identify plot type visualize variables interested .","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Takes in variables, determines what class they are, and create a simple plot","text":"can install development version qacPlot like : install package, can use following code","code":"if(!require(\"remotes\")){ install.packages(\"remotes\") } remotes::install_github(\"cgao1/qacPlot\") library(qacPlot)"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Takes in variables, determines what class they are, and create a simple plot","text":"one function thePlot package, want keep simple use. function can handle univariate, bivariate multivariate graphs. ’s example: detailed instructions, please visit thePlot","code":"thePlot(mtcars, cyl, mpg)"},{"path":"/reference/qacPlot-package.html","id":null,"dir":"Reference","previous_headings":"","what":"qacPlot: Takes in variables, determines what class they are, and create a simple plot — qacPlot-package","title":"qacPlot: Takes in variables, determines what class they are, and create a simple plot — qacPlot-package","text":"package take three variables third variable grouping variable. package determine whether categorical numerical variable make appropriate plots.","code":""},{"path":"/reference/qacPlot-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"qacPlot: Takes in variables, determines what class they are, and create a simple plot — qacPlot-package","text":"Maintainer: Calvin Gao cgao@wesleyan.edu Authors: Terry Yuan yuan@wesleyan.edu","code":""},{"path":"/reference/thePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"thePlot — thePlot","title":"thePlot — thePlot","text":"thePlot takes nearly variables returns plot","code":""},{"path":"/reference/thePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"thePlot — thePlot","text":"","code":"thePlot(data, x, y = NULL, group = NULL)"},{"path":"/reference/thePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"thePlot — thePlot","text":"data dataset variables taken x first variable y second variable group variable group plot ","code":""},{"path":"/reference/thePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"thePlot — thePlot","text":"plot","code":""},{"path":"/reference/thePlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"thePlot — thePlot","text":"","code":"if (FALSE) { library(ggplot2) data(mtcars) thePlot(mtcars, hp) }"}]
