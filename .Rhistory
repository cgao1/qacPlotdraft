}
# X Y G
if(!is.null(y) & !is.null(group)){
if(xclass=="C" & yclass=="C" & groupclass=="C"){
p<-ggplot(data=data,
aes(x=data[[x]],
fill = data[[y]])) +
geom_bar(position = "dodge")  +
facet_wrap(~group)
labs(#change [fill in]
x = x_quote,
y = y_quote,
title = paste("",
"")) +
theme_minimal()
}
if(xclass=="Q" & yclass=="Q" & groupclass=="C"){
p<-ggplot(data,
aes(x = x,
fill = y)) +
geom_density(alpha = 0.4) +
facet_wrap(~group)
labs(#change fill in
title = "")+
theme_minimal()
}
if(xclass=="Q" & yclass=="Q" & groupclass=="C"){
p<-ggplot(data=data)+
geom_point(aes(x=x, y=y))+
facet_grid(. ~ group)+
theme_minimal()
}
}
p
}
thePlot(mtcars,"mpg")
thePlot(mtcars,"cyl")
thePlot(mtcars,"cyl","mpg")
thePlot(mtcars,"cyl")
thePlot(mtcars,"mpg")
thePlot(mtcars,"cyl","cyl")
View(mtcars)
mtcars$am<-factor(mtcars$am)
thePlot(mtcars,"cyl","am")
#' @return A plot
#' @export
#' @import ggplot2
#'
#' @examples
#' \dontrun{
#' library(ggplot2)
#' data(mtcars)
#' thePlot(mtcars, hp)
#' }
thePlot<- function(data,x,y=NULL,group=NULL){
# needs to be dataframe
# needs at least x
# all three variables need to be in the dataset
# find function that skips test
# what to do with complex variables, is there types of classes and what should di with them
# with Q, hitogram or density
#make sure they do not put the same variable
x_sub<-substitute(x)
x_quote<-as.character(x)
y_sub<-substitute(y)
y_quote<-as.character(y)
group_sub<-substitute(group)
group_quote<-as.character(group)
if(!is.data.frame(data)){
return(cat("This is not a proper dataframe"))
}
# character, numeric, integer, complex, and logical (factor??)
classQ<-c("numeric", "integer") # double check with user
classC<-c("character","logical","factor")
colplot<-colnames(data)
if(!any(colplot==x_sub)){
return(cat(x_quote, "is not a variable in the dataframe"))
}
xclass<-class(data[[x]])
if(any(classQ==xclass)){
xclass<-"Q"
}
else if(any(classC==xclass)){
xclass<-"C"
}
if(!is.null(y_sub)){
if(!any(colplot==y_sub)){
return(cat(y_quote, "is not a variable in the dataframe"))
}
yclass<-class(data[[y_quote]])
if(any(classQ==yclass)){
yclass<-"Q"
}
else if(any(classC==yclass)){
yclass=="C"
}
}
if(!is.null(data$group)){
if(!any(colplot==group_quote)){
return(cat(group_quote, "is not a variable in the dataframe"))
}
groupclass<-class(data$group)
if(any(classQ==groupclass)){
groupclass=="Q"
}
else if(any(classC==groupclass)){
groupclass=="C"
}
}
# only X
if(is.null(y) & is.null(group)){
if(xclass=="C"){
p<-ggplot(data=data,
aes(x=data[[x]])) +
geom_bar(fill = "steelblue",
color = "black")  +
labs(x = x_quote,
y = "Frequency",
title = paste("Frequency by",x_quote)) +
theme_minimal()
}
if(xclass=="Q"){
p<-ggplot(data,
aes(x=data[[x]])) +
geom_density(fill = "steelblue",
color = "black")  +
labs(x=x_quote,
y = "Frequency",
title = paste("Frequency by", x_quote)) +
theme_minimal()
}
}
# X and Y
if(!is.null(y) & is.null(group)){
if(xclass=="C" & yclass=="C"){
p<-ggplot(data,
aes(x=data[[x]],
fill = data[[y_sub]])) +
geom_bar(position = "dodge")  +
labs(#change [fill in]
x = x_quote,
y = y_quote,
title = paste("Bar Chart of", x_quote,
"")) +
theme_minimal()
}
#this is a q by c
if(xclass=="C" & yclass=="Q"){
p<-ggplot(data,
aes(x = data[[y_sub]],
fill = data[[x]])) +
geom_density(alpha = 0.4) +
labs(#change fill in
title = "Density",
x=x_quote,
y="Change this title")
}
if(xclass=="Q" & yclass=="Q"){
p<-ggplot(data=data)+
geom_point(aes(x=data[[x]], y=data$y_quote))+
theme_minimal()
}
}
# X Y G
if(!is.null(y) & !is.null(group)){
if(xclass=="C" & yclass=="C" & groupclass=="C"){
p<-ggplot(data=data,
aes(x=data[[x]],
fill = data[[y]])) +
geom_bar(position = "dodge")  +
facet_wrap(~group)
labs(#change [fill in]
x = x_quote,
y = y_quote,
title = paste("",
"")) +
theme_minimal()
}
if(xclass=="Q" & yclass=="Q" & groupclass=="C"){
p<-ggplot(data,
aes(x = x,
fill = y)) +
geom_density(alpha = 0.4) +
facet_wrap(~group)
labs(#change fill in
title = "")+
theme_minimal()
}
if(xclass=="Q" & yclass=="Q" & groupclass=="C"){
p<-ggplot(data=data)+
geom_point(aes(x=x, y=y))+
facet_grid(. ~ group)+
theme_minimal()
}
}
p
}
thePlot(mtcars,"cyl","am")
#' @return A plot
#' @export
#' @import ggplot2
#'
#' @examples
#' \dontrun{
#' library(ggplot2)
#' data(mtcars)
#' thePlot(mtcars, hp)
#' }
thePlot<- function(data,x,y=NULL,group=NULL){
# needs to be dataframe
# needs at least x
# all three variables need to be in the dataset
# find function that skips test
# what to do with complex variables, is there types of classes and what should di with them
# with Q, hitogram or density
#make sure they do not put the same variable
x_sub<-substitute(x)
x_quote<-as.character(x)
y_sub<-substitute(y)
y_quote<-as.character(y)
group_sub<-substitute(group)
group_quote<-as.character(group)
if(!is.data.frame(data)){
return(cat("This is not a proper dataframe"))
}
# character, numeric, integer, complex, and logical (factor??)
classQ<-c("numeric", "integer") # double check with user
classC<-c("character","logical","factor")
colplot<-colnames(data)
if(!any(colplot==x_sub)){
return(cat(x_quote, "is not a variable in the dataframe"))
}
xclass<-class(data[[x]])
if(any(classQ==xclass)){
xclass<-"Q"
}
else if(any(classC==xclass)){
xclass<-"C"
}
if(!is.null(y_sub)){
if(!any(colplot==y_sub)){
return(cat(y_quote, "is not a variable in the dataframe"))
}
yclass<-class(data[[y_quote]])
if(any(classQ==yclass)){
yclass<-"Q"
}
else if(any(classC==yclass)){
yclass=="C"
}
}
if(!is.null(data$group)){
if(!any(colplot==group_quote)){
return(cat(group_quote, "is not a variable in the dataframe"))
}
groupclass<-class(data$group)
if(any(classQ==groupclass)){
groupclass=="Q"
}
else if(any(classC==groupclass)){
groupclass=="C"
}
}
# only X
if(is.null(y) & is.null(group)){
if(xclass=="C"){
p<-ggplot(data=data,
aes(x=data[[x]])) +
geom_bar(fill = "steelblue",
color = "black")  +
labs(x = x_quote,
y = "Frequency",
title = paste("Frequency by",x_quote)) +
theme_minimal()
}
if(xclass=="Q"){
p<-ggplot(data,
aes(x=data[[x]])) +
geom_density(fill = "steelblue",
color = "black")  +
labs(x=x_quote,
y = "Frequency",
title = paste("Frequency by", x_quote)) +
theme_minimal()
}
}
# X and Y
if(!is.null(y) & is.null(group)){
if(xclass=="C" & yclass=="C"){
p<-ggplot(data,
aes(x=data[[x]],
fill = data$y_sub)) +
geom_bar(position = "dodge")  +
labs(#change [fill in]
x = x_quote,
y = y_quote,
title = paste("Bar Chart of", x_quote,
"")) +
theme_minimal()
}
#this is a q by c
if(xclass=="C" & yclass=="Q"){
p<-ggplot(data,
aes(x = data[[y_sub]],
fill = data[[x]])) +
geom_density(alpha = 0.4) +
labs(#change fill in
title = "Density",
x=x_quote,
y="Change this title")
}
if(xclass=="Q" & yclass=="Q"){
p<-ggplot(data=data)+
geom_point(aes(x=data[[x]], y=data$y_quote))+
theme_minimal()
}
}
# X Y G
if(!is.null(y) & !is.null(group)){
if(xclass=="C" & yclass=="C" & groupclass=="C"){
p<-ggplot(data=data,
aes(x=data[[x]],
fill = data[[y]])) +
geom_bar(position = "dodge")  +
facet_wrap(~group)
labs(#change [fill in]
x = x_quote,
y = y_quote,
title = paste("",
"")) +
theme_minimal()
}
if(xclass=="Q" & yclass=="Q" & groupclass=="C"){
p<-ggplot(data,
aes(x = x,
fill = y)) +
geom_density(alpha = 0.4) +
facet_wrap(~group)
labs(#change fill in
title = "")+
theme_minimal()
}
if(xclass=="Q" & yclass=="Q" & groupclass=="C"){
p<-ggplot(data=data)+
geom_point(aes(x=x, y=y))+
facet_grid(. ~ group)+
theme_minimal()
}
}
p
}
thePlot(mtcars,"cyl","am")
thePlot(mtcars,"cyl","am")
#' @return A plot
#' @export
#' @import ggplot2
#'
#' @examples
#' \dontrun{
#' library(ggplot2)
#' data(mtcars)
#' thePlot(mtcars, hp)
#' }
thePlot<- function(data,x,y=NULL,group=NULL){
# needs to be dataframe
# needs at least x
# all three variables need to be in the dataset
# find function that skips test
# what to do with complex variables, is there types of classes and what should di with them
# with Q, hitogram or density
#make sure they do not put the same variable
x_sub<-substitute(x)
x_quote<-as.character(x)
y_sub<-substitute(y)
y_quote<-as.character(y)
group_sub<-substitute(group)
group_quote<-as.character(group)
if(!is.data.frame(data)){
return(cat("This is not a proper dataframe"))
}
# character, numeric, integer, complex, and logical (factor??)
classQ<-c("numeric", "integer") # double check with user
classC<-c("character","logical","factor")
colplot<-colnames(data)
if(!any(colplot==x_sub)){
return(cat(x_quote, "is not a variable in the dataframe"))
}
xclass<-class(data[[x]])
if(any(classQ==xclass)){
xclass<-"Q"
}
else if(any(classC==xclass)){
xclass<-"C"
}
if(!is.null(y_sub)){
if(!any(colplot==y_sub)){
return(cat(y_quote, "is not a variable in the dataframe"))
}
yclass<-class(data[[y_quote]])
if(any(classQ==yclass)){
yclass<-"Q"
}
else if(any(classC==yclass)){
yclass=="C"
}
}
if(!is.null(data$group)){
if(!any(colplot==group_quote)){
return(cat(group_quote, "is not a variable in the dataframe"))
}
groupclass<-class(data$group)
if(any(classQ==groupclass)){
groupclass=="Q"
}
else if(any(classC==groupclass)){
groupclass=="C"
}
}
# only X
if(is.null(y) & is.null(group)){
if(xclass=="C"){
p<-ggplot(data=data,
aes(x=data[[x]])) +
geom_bar(fill = "steelblue",
color = "black")  +
labs(x = x_quote,
y = "Frequency",
title = paste("Frequency by",x_quote)) +
theme_minimal()
}
if(xclass=="Q"){
p<-ggplot(data,
aes(x=data[[x]])) +
geom_density(fill = "steelblue",
color = "black")  +
labs(x=x_quote,
y = "Frequency",
title = paste("Frequency by", x_quote)) +
theme_minimal()
}
}
# X and Y
if(!is.null(y) & is.null(group)){
if(xclass=="C" & yclass=="C"){
p<-ggplot(data,
aes(x=data[[x]],
fill = data[[y_sub]])) +
geom_bar(position = "dodge")  +
labs(#change [fill in]
x = x_quote,
y = y_quote,
title = paste("Bar Chart of", x_quote,
"")) +
theme_minimal()
}
#this is a q by c
if(xclass=="C" & yclass=="Q"){
p<-ggplot(data,
aes(x = data[[y_sub]],
fill = data[[x]])) +
geom_density(alpha = 0.4) +
labs(#change fill in
title = "Density",
x=x_quote,
y="Change this title")
}
if(xclass=="Q" & yclass=="Q"){
p<-ggplot(data=data)+
geom_point(aes(x=data[[x]], y=data$y_quote))+
theme_minimal()
}
}
# X Y G
if(!is.null(y) & !is.null(group)){
if(xclass=="C" & yclass=="C" & groupclass=="C"){
p<-ggplot(data=data,
aes(x=data[[x]],
fill = data[[y]])) +
geom_bar(position = "dodge")  +
facet_wrap(~group)
labs(#change [fill in]
x = x_quote,
y = y_quote,
title = paste("",
"")) +
theme_minimal()
}
if(xclass=="Q" & yclass=="Q" & groupclass=="C"){
p<-ggplot(data,
aes(x = x,
fill = y)) +
geom_density(alpha = 0.4) +
facet_wrap(~group)
labs(#change fill in
title = "")+
theme_minimal()
}
if(xclass=="Q" & yclass=="Q" & groupclass=="C"){
p<-ggplot(data=data)+
geom_point(aes(x=x, y=y))+
facet_grid(. ~ group)+
theme_minimal()
}
}
p
}
thePlot(mtcars,"cyl","am")
thePlot(mtcars,"cyl","am")
thePlot(mtcars,"cyl","mpg")
debugonce(thePlot)
thePlot(mtcars,"cyl","am")
data[[y_quote]]
